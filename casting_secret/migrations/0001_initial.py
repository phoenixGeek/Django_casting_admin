# Generated by Django 2.1.3 on 2019-03-04 23:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(null=True)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('blocked', models.BooleanField(db_column='is_blocked', default=False)),
                ('action', models.CharField(max_length=150, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('auth_user', models.ForeignKey(db_column='auth_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='auth_user_activity', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'activity',
                'ordering': ['-publish_date'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ActivityAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('path', models.FileField(upload_to='posts/attachment/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'gif', 'tiff', 'mp4', 'mp3'])])),
                ('type', models.CharField(default='IMG', max_length=25)),
                ('activity', models.ForeignKey(db_column='activity_id', on_delete=django.db.models.deletion.CASCADE, related_name='activity_attachment', to='casting_secret.Activity')),
            ],
            options={
                'db_table': 'activity_attachment',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ActivityBookmark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('activity', models.ForeignKey(db_column='activity_id', on_delete=django.db.models.deletion.CASCADE, related_name='activity_bookmark', to='casting_secret.Activity')),
                ('auth_user', models.ForeignKey(db_column='auth_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='auth_user_activity_bookmark', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'activity_bookmark',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ActivityControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_hidden', models.BooleanField(default=False)),
                ('is_saved', models.BooleanField(default=False)),
                ('is_reported', models.BooleanField(default=False)),
                ('activity', models.ForeignKey(db_column='activity_id', on_delete=django.db.models.deletion.CASCADE, related_name='activity_control', to='casting_secret.Activity')),
                ('auth_user', models.ForeignKey(db_column='auth_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='auth_user_activity_control', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'activity_control',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ActivityIgnore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('activity', models.ForeignKey(db_column='activity_id', on_delete=django.db.models.deletion.CASCADE, related_name='activity_ignore', to='casting_secret.Activity')),
                ('auth_user', models.ForeignKey(db_column='auth_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='auth_user_activity_ignore', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'activity_ignore',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ActivityMention',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('activity', models.ForeignKey(db_column='activity_id', on_delete=django.db.models.deletion.CASCADE, related_name='activity_mention', to='casting_secret.Activity')),
                ('auth_user', models.ForeignKey(db_column='auth_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='auth_user_activity_mention', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'activity_mention',
                'ordering': ['pk'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ActivityReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('activity', models.ForeignKey(db_column='activity_id', on_delete=django.db.models.deletion.CASCADE, related_name='activity_report', to='casting_secret.Activity')),
                ('auth_user', models.ForeignKey(db_column='auth_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='auth_user_activity_report', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'activity_report',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ActivitySocialAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('has_like', models.BooleanField(db_index=True, default=False)),
                ('has_dislike', models.BooleanField(db_index=True, default=False)),
                ('has_share', models.BooleanField(db_index=True, default=False)),
                ('activity', models.ForeignKey(db_column='activity_id', on_delete=django.db.models.deletion.CASCADE, related_name='activity_action', to='casting_secret.Activity')),
                ('auth_user', models.ForeignKey(db_column='auth_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='auth_user_activity_action', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'activity_social_actions',
                'ordering': ['-publish_date'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AgeRangeLookUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True, unique=True)),
            ],
            options={
                'db_table': 'age_range_lookup',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Albums',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('album_name', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'profile_album',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Applicants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applied_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'job_applicants',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BuildLookUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True, unique=True)),
            ],
            options={
                'db_table': 'build_lookup',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CommentMention',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('auth_user', models.ForeignKey(db_column='auth_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='auth_user_comment_mention', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'comment_mention',
                'ordering': ['pk'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('activity', models.ForeignKey(db_column='activity_id', on_delete=django.db.models.deletion.CASCADE, related_name='activity_comment', to='casting_secret.Activity')),
                ('auth_user', models.ForeignKey(db_column='auth_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='auth_user_comments', to=settings.AUTH_USER_MODEL)),
                ('thread', models.ForeignKey(db_column='thread_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_thread', to='casting_secret.Comments')),
            ],
            options={
                'db_table': 'comments',
                'ordering': ['-publish_date'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.CharField(max_length=150, null=True)),
                ('cover', models.CharField(max_length=150, null=True)),
                ('name', models.CharField(max_length=150)),
                ('about', models.TextField(null=True)),
                ('headquarter', models.TextField(null=True)),
                ('is_address_public', models.BooleanField(default=True)),
                ('website', models.URLField(null=True)),
                ('since', models.TextField(max_length=4, null=True)),
                ('size_from', models.IntegerField(null=True)),
                ('size_to', models.IntegerField(null=True)),
                ('slug', models.SlugField()),
            ],
            options={
                'db_table': 'company',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CompanyTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'company_tags',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EthnicitiesLookUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, null=True, unique=True)),
            ],
            options={
                'db_table': 'ethnicities_lookup',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EyesLookUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True, unique=True)),
            ],
            options={
                'db_table': 'eye_lookup',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HairLookUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True, unique=True)),
            ],
            options={
                'db_table': 'hair_lookup',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HeightRangeLookUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True, unique=True)),
            ],
            options={
                'db_table': 'height_range_lookup',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HobbiesLookUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, null=True, unique=True)),
            ],
            options={
                'db_table': 'hobbies_lookup',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('title', models.CharField(max_length=250, unique=True)),
                ('description', models.TextField()),
                ('have_daily_perks', models.BooleanField(default=False)),
                ('daily_perks_budget', models.DecimalField(decimal_places=2, max_digits=7)),
                ('have_transportation', models.BooleanField(default=False)),
                ('transportation_budget', models.DecimalField(decimal_places=2, max_digits=7)),
                ('have_meal', models.BooleanField(default=False)),
                ('meal_budget', models.DecimalField(decimal_places=2, max_digits=7)),
                ('have_space_rest', models.BooleanField(default=False)),
                ('space_rest_budget', models.DecimalField(decimal_places=2, max_digits=7)),
                ('is_male', models.BooleanField(default=False)),
                ('is_female', models.BooleanField(default=False)),
                ('age', models.IntegerField(null=True)),
                ('hide_company', models.BooleanField(default=False)),
                ('latitude', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('longitude', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('slug', models.SlugField(allow_unicode=True, unique=True)),
                ('company', models.ForeignKey(db_column='profile_id', on_delete=django.db.models.deletion.CASCADE, related_name='company_jobs', to='casting_secret.Company')),
            ],
            options={
                'db_table': 'jobs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='JobCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job', models.ForeignKey(db_column='job_id', on_delete=django.db.models.deletion.CASCADE, related_name='job_category', to='casting_secret.Job')),
            ],
            options={
                'db_table': 'job_category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='JobSchedules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('interview_date', models.DateTimeField()),
                ('interviewer', models.CharField(max_length=150)),
                ('location', models.TextField()),
                ('job', models.ForeignKey(db_column='job_id', on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='casting_secret.Job')),
            ],
            options={
                'db_table': 'job_schedules',
                'ordering': ['interview_date'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProfileHobbies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hobbies', models.ForeignKey(db_column='hobbies_id', on_delete=django.db.models.deletion.CASCADE, related_name='hobbies', to='casting_secret.HobbiesLookUp')),
            ],
            options={
                'db_table': 'profile_hobbies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProfileSocialLinks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network', models.CharField(max_length=50, null=True)),
                ('url', models.URLField(null=True, unique=True)),
            ],
            options={
                'db_table': 'profile_social_networks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProfileTraining',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=150)),
                ('institute', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'profile_training',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Shortlisted',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shortlisted_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('job', models.ForeignKey(db_column='job_id', on_delete=django.db.models.deletion.CASCADE, related_name='shortlisted', to='casting_secret.Job')),
            ],
            options={
                'db_table': 'job_shortlisted',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TalentCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(max_length=150)),
                ('name_ar', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Talent Categories',
                'db_table': 'talent_categories',
                'ordering': ['name_en'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UsersProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.CharField(max_length=150, null=True)),
                ('cover', models.CharField(max_length=150, null=True)),
                ('gender', models.CharField(max_length=50, null=True)),
                ('location', models.CharField(max_length=150, null=True)),
                ('about', models.TextField(null=True)),
                ('phone', models.CharField(max_length=50, null=True, unique=True)),
                ('slug', models.SlugField()),
                ('age', models.IntegerField(default=0, null=True)),
                ('auth_user', models.ForeignKey(db_column='auth_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='auth_user_profile', to=settings.AUTH_USER_MODEL)),
                ('build', models.ForeignKey(db_column='build_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile_build', to='casting_secret.BuildLookUp')),
                ('ethnicity', models.ForeignKey(db_column='ethnicity_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile_ethnicity', to='casting_secret.EthnicitiesLookUp')),
                ('eye', models.ForeignKey(db_column='eye_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile_eye', to='casting_secret.EyesLookUp')),
                ('hair', models.ForeignKey(db_column='hair_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile_hair', to='casting_secret.HairLookUp')),
                ('height', models.ForeignKey(db_column='height_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile_height', to='casting_secret.HeightRangeLookUp')),
            ],
            options={
                'verbose_name': 'Users profile',
                'db_table': 'users_profile',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UsersProfileTalentCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('talent_categories', models.ForeignKey(db_column='talent_category_id', on_delete=django.db.models.deletion.CASCADE, related_name='talent_categories', to='casting_secret.TalentCategories')),
                ('user_profile', models.ForeignKey(db_column='user_profile_id', on_delete=django.db.models.deletion.CASCADE, related_name='users_profile_categories', to='casting_secret.UsersProfile')),
            ],
            options={
                'db_table': 'users_profile_categories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WeightRangeLookUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True, unique=True)),
            ],
            options={
                'db_table': 'weight_range_lookup',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='usersprofile',
            name='weight',
            field=models.ForeignKey(db_column='weight_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile_weight', to='casting_secret.WeightRangeLookUp'),
        ),
        migrations.AlterUniqueTogether(
            name='talentcategories',
            unique_together={('name_en', 'name_ar')},
        ),
        migrations.AddField(
            model_name='shortlisted',
            name='user_profile',
            field=models.ForeignKey(db_column='profile_id', on_delete=django.db.models.deletion.CASCADE, related_name='applicant_shortlisted_jobs', to='casting_secret.UsersProfile'),
        ),
        migrations.AddField(
            model_name='profiletraining',
            name='user_profile',
            field=models.ForeignKey(db_column='user_profile_id', on_delete=django.db.models.deletion.CASCADE, related_name='users_profile_courses', to='casting_secret.UsersProfile'),
        ),
        migrations.AddField(
            model_name='profilesociallinks',
            name='user_profile',
            field=models.ForeignKey(db_column='user_profile_id', on_delete=django.db.models.deletion.CASCADE, related_name='users_profile_social', to='casting_secret.UsersProfile'),
        ),
        migrations.AddField(
            model_name='profilehobbies',
            name='user_profile',
            field=models.ForeignKey(db_column='user_profile_id', on_delete=django.db.models.deletion.CASCADE, related_name='users_profile_hobbies', to='casting_secret.UsersProfile'),
        ),
        migrations.AddField(
            model_name='jobschedules',
            name='user_profile',
            field=models.ForeignKey(db_column='profile_id', on_delete=django.db.models.deletion.CASCADE, related_name='interview_applicants', to='casting_secret.UsersProfile'),
        ),
        migrations.AddField(
            model_name='jobcategory',
            name='job_categories',
            field=models.ForeignKey(db_column='job_category_id', on_delete=django.db.models.deletion.CASCADE, related_name='job_categories', to='casting_secret.TalentCategories'),
        ),
        migrations.AddField(
            model_name='companytags',
            name='category',
            field=models.ForeignKey(db_column='category_id', on_delete=django.db.models.deletion.CASCADE, related_name='company_category', to='casting_secret.TalentCategories'),
        ),
        migrations.AddField(
            model_name='companytags',
            name='company',
            field=models.ForeignKey(db_column='company_id', on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='casting_secret.Company'),
        ),
        migrations.AddField(
            model_name='company',
            name='user_profile',
            field=models.ForeignKey(db_column='profile_id', on_delete=django.db.models.deletion.CASCADE, related_name='profile_company', to='casting_secret.UsersProfile'),
        ),
        migrations.AddField(
            model_name='commentmention',
            name='comment',
            field=models.ForeignKey(db_column='comment_id', on_delete=django.db.models.deletion.CASCADE, related_name='comment_mention', to='casting_secret.Comments'),
        ),
        migrations.AddField(
            model_name='applicants',
            name='job',
            field=models.ForeignKey(db_column='job_id', on_delete=django.db.models.deletion.CASCADE, related_name='applicants', to='casting_secret.Job'),
        ),
        migrations.AddField(
            model_name='applicants',
            name='user_profile',
            field=models.ForeignKey(db_column='profile_id', on_delete=django.db.models.deletion.CASCADE, related_name='applicant_applied_jobs', to='casting_secret.UsersProfile'),
        ),
        migrations.AddField(
            model_name='albums',
            name='user_profile',
            field=models.ForeignKey(db_column='user_profile_id', on_delete=django.db.models.deletion.CASCADE, related_name='users_profile_album', to='casting_secret.UsersProfile'),
        ),
        migrations.AddField(
            model_name='activityattachment',
            name='album',
            field=models.ForeignKey(db_column='album_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='auth_user_album', to='casting_secret.Albums'),
        ),
        migrations.AddField(
            model_name='activityattachment',
            name='auth_user',
            field=models.ForeignKey(db_column='auth_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='auth_user_activity_video', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='activity',
            name='company',
            field=models.ForeignKey(db_column='company_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_activity', to='casting_secret.Company'),
        ),
        migrations.AddField(
            model_name='activity',
            name='original_activity',
            field=models.ForeignKey(db_column='original_activity', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='original_post', to='casting_secret.Activity'),
        ),
        migrations.AlterUniqueTogether(
            name='usersprofiletalentcategories',
            unique_together={('user_profile', 'talent_categories')},
        ),
        migrations.AlterUniqueTogether(
            name='profiletraining',
            unique_together={('course_name', 'institute', 'user_profile')},
        ),
        migrations.AlterUniqueTogether(
            name='profilehobbies',
            unique_together={('hobbies', 'user_profile')},
        ),
    ]
